
openapi: 3.0.0
info:
  title: project-and-task-api
  version: 1.0.0
servers:
  - url: http://0.0.0.0:8080/api/v1
  - url: http://localhost:8080/api/v1
  - url: http://127.0.0.1:8080/api/v1

paths:
  /projects:
    get:
      summary: Get all projects
      responses:
        "200":
          description: A list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        "201":
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /projects/{projectId}:
    get:
      summary: Get a project by ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update a project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
      responses:
        "200":
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the project
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: The name of the project
        description:
          type: string
          description: The description of the project
        color:
          type: string
          description: The color code for the project (e.g., hex color)
    ProjectListResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    ProjectCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the project
        description:
          type: string
          description: The description of the project
        color:
          type: string
          description: The color code for the project (e.g., hex color)
          example: "#FF5733"
    ProjectUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the project
        description:
          type: string
          description: The description of the project
        color:
          type: string
          description: The color code for the project (e.g., hex color)
          example: "#FF5733"
    ProjectResponse:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: "プロジェクト名は必須です"
        code:
          type: string
          description: The error code for programmatic handling
          example: "VALIDATION_ERROR"
        details:
          type: object
          description: Additional error details
          additionalProperties: true